<?xml version="1.0"?>
<launch>
  <include file="$(find mrc_examples)/launch/vorc_marina.launch">
   </include>
  <node ns="cora" pkg="usv_control" type="usv_control_diff_drive.py"
  name="usv_control_diff_drive" output="screen">
    <!-- Set initial control gains -->
    <!-- Surge -->
    <param name="velKp" value="1.5"/>
    <param name="velKi" value="0.0"/>
    <param name="velKd" value="0.2"/>
    <!-- Yaw Rate -->
    <param name="yawKp" value="2.1"/>
    <param name="yawKi" value="0.0"/>
    <param name="yawKd" value="0.7"/>

    <!-- Use remap to connect generic controller to specific use-case -->
    <remap from="nav_odom" to="sensors/p3d_nav"/>
    <remap from="left_thrust_cmd" to="thrusters/left_thrust_cmd"/>
    <remap from="right_thrust_cmd" to="thrusters/right_thrust_cmd"/>
    <remap from="vel_pid_debug" to="control/vel_pid_debug"/>
    <remap from="yaw_pid_debug" to="control/yaw_pid_debug"/> 
  </node>
  
<!-- The node to read waypoints and generate the path -->
  <node pkg="mrc_examples" type="rabbit.py" name="rabbit" output="screen">
    <param name="update_rate" type="double" value="10"/>
    <param name="velocity" type="double" value="3"/>
    <rosparam file="$(find ay21_hw8)/config/rabbit_waypoints_marina.yaml" />
  </node>

  <!-- Spawn a visual model to serve as marker -->
  <node name="spawn_rabbit" pkg="gazebo_ros" type="spawn_model"
        args="-x 0 -y 0 -z 0 -file $(find mrc_examples)/urdf/rabbit.urdf
              -urdf -model rabbit"/>

  <!-- Convert PointStamped messages to model states -->
  <node name="pointstamped2modelstate" pkg="mrc_examples" type="pointstamped2modelstate.py" output="screen">
    <param name="model_name" value="rabbit"/>
    <param name="reference_frame" value="world"/>
  </node>
  
</launch>
